import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id "annodocimal-base.conventions"
    id "annodocimal-jacoco.conventions"
    id 'com.gradle.plugin-publish'
    id 'java-gradle-plugin'
    id 'com.gradleup.shadow' version '8.3.3'
}

description "AnnoDocimal Stub Generator Gradle Plugin"

gradlePlugin {
    plugins {
        annoDocimalBasePlugin {
            id = 'com.blackbuild.annodocimal.base-plugin'
            displayName = 'AnnoDocimal Base Plugin'
            description = 'Create Javadocs for generated code'
            implementationClass = 'com.blackbuild.annodocimal.plugin.AnnoDocimalBasePlugin'
            tags.addAll 'testing', 'groovy', 'cps', 'jenkins'
        }
        annoDocimalPlugin {
            id = 'com.blackbuild.annodocimal.plugin'
            displayName = 'AnnoDocimal Plugin'
            description = 'Create Javadocs for generated code'
            implementationClass = 'com.blackbuild.annodocimal.plugin.AnnoDocimalPlugin'
            tags.addAll 'testing', 'groovy', 'cps', 'jenkins'
        }
    }

    website = 'https://github.com/blackbuild/anno-docimal'
    vcsUrl = 'https://github.com/blackbuild/anno-docimal.git'
    description = project.description
}

dependencies {
    // all dependencies are compile time dependencies (for AST "runtime" is compile time of a client project")
    api project(':anno-docimal-generator')
    testImplementation libs.spock.g3
}

test {
    useJUnitPlatform()
    inputs.files(project(":anno-docimal-ast").tasks.named("jar"), project(":anno-docimal-annotations").tasks.named("jar"))

    doFirst {
        systemProperty("anno.docimal.ast.jars", project(":anno-docimal-ast").tasks.getByName("jar").archiveFile.getAsFile().get().absolutePath)
        systemProperty("anno.docimal.annotations.jar", project(":anno-docimal-annotations").tasks.getByName("jar").archiveFile.getAsFile().get().absolutePath)
    }
}

tasks.named('shadowJar', ShadowJar) {
    enableRelocation true
    archiveClassifier.set('')
}

publishing {
    publications {
        pluginMaven(MavenPublication)
    }
}

